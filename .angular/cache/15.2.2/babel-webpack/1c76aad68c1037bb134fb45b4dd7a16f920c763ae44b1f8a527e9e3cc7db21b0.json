{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./async-item.component\";\nfunction AsyncListComponent_async_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"async-item\", 2);\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"name\", user_r1);\n  }\n}\nexport class AsyncListComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.addCount = 0;\n    this.editCount = 0;\n    this.users = ['Admin', 'Anon', 'User'];\n    this.$users = new BehaviorSubject(this.users);\n    // setInterval(() => {\n    // console.log('Manual change detect onPush')\n    // this.cdr.detectChanges();\n    // }, 1000);\n  }\n\n  get runChangeDetection() {\n    console.log('Checking the view');\n    return true;\n  }\n  addUser() {\n    this.users.push(`New User ${++this.addCount}`);\n    this.$users.next(this.users);\n  }\n  editUser() {\n    this.users[0] = `Edit user ${++this.editCount}`;\n    this.$users.next(this.users);\n  }\n}\n// Внутри async piep\nAsyncListComponent.ɵfac = function AsyncListComponent_Factory(t) {\n  return new (t || AsyncListComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nAsyncListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AsyncListComponent,\n  selectors: [[\"async-list\"]],\n  decls: 7,\n  vars: 3,\n  consts: [[3, \"name\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"name\"]],\n  template: function AsyncListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, AsyncListComponent_async_item_1_Template, 1, 1, \"async-item\", 0);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function AsyncListComponent_Template_button_click_3_listener() {\n        return ctx.addUser();\n      });\n      i0.ɵɵtext(4, \"Add async user\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function AsyncListComponent_Template_button_click_5_listener() {\n        return ctx.editUser();\n      });\n      i0.ɵɵtext(6, \"Edit async user\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx.$users));\n    }\n  },\n  dependencies: [i1.NgForOf, i2.AsyncItemComponent, i1.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\nif (oldValue !== newValue) {\n  this.cdr.detectChanges();\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;;;;;IAMhCC,gCAA2E;;;;IAA3BA,8BAAa;;;AAOnE,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,GAAsB;IAAtB,QAAG,GAAHA,GAAG;IALf,aAAQ,GAAG,CAAC;IACZ,cAAS,GAAG,CAAC;IACb,UAAK,GAAG,CAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAE;IACpC,WAAM,GAAG,IAAIJ,eAAe,CAAC,IAAI,CAACK,KAAK,CAAC;IAG7C;IACE;IACA;IACF;EACF;;EAEA,IAAIC,kBAAkB;IACpBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,OAAO,IAAI;EACb;EAEAC,OAAO;IACL,IAAI,CAACJ,KAAK,CAACK,IAAI,CAAC,YAAY,EAAE,IAAI,CAACC,QAAQ,EAAE,CAAC;IAC9C,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACR,KAAK,CAAC;EAC9B;EAEAS,QAAQ;IACN,IAAI,CAACT,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,EAAE,IAAI,CAACU,SAAS,EAAE;IAC/C,IAAI,CAACH,MAAM,CAACC,IAAI,CAAC,IAAI,CAACR,KAAK,CAAC;EAC9B;;AAIF;AA9BaH,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAR3BnB,2BAAK;MACHA,iFAA2E;;MAC3EA,iCAA4B;MAApBA;QAAA,OAASoB,aAAS;MAAA,EAAC;MAACpB,8BAAc;MAAAA,iBAAS;MACnDA,iCAA6B;MAArBA;QAAA,OAASoB,cAAU;MAAA,EAAC;MAACpB,+BAAe;MAAAA,iBAAS;;;MAFxBA,eAAiB;MAAjBA,0DAAiB;;;;;;;AAsCpD,IAAIqB,QAAQ,KAAKC,QAAQ,EAAE;EACzB,IAAI,CAACnB,GAAG,CAACoB,aAAa,EAAE","names":["BehaviorSubject","i0","AsyncListComponent","constructor","cdr","users","runChangeDetection","console","log","addUser","push","addCount","$users","next","editUser","editCount","selectors","decls","vars","consts","template","ctx","oldValue","newValue","detectChanges"],"sourceRoot":"","sources":["/home/nik/projects/webinar/angular-change-detection/src/app/async/async-list.component.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'async-list',\n  template: `\n    <div>\n      <async-item *ngFor=\"let user of $users | async\" [name]=\"user\"></async-item>\n      <button (click)=\"addUser()\">Add async user</button>\n      <button (click)=\"editUser()\">Edit async user</button>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AsyncListComponent {\n  private addCount = 0;\n  private editCount = 0;\n  private users = [ 'Admin', 'Anon', 'User' ];\n  public $users = new BehaviorSubject(this.users);\n\n  constructor(private cdr: ChangeDetectorRef) {\n    // setInterval(() => {\n      // console.log('Manual change detect onPush')\n      // this.cdr.detectChanges();\n    // }, 1000);\n  }\n\n  get runChangeDetection() {\n    console.log('Checking the view');\n    return true;\n  }\n\n  addUser() {\n    this.users.push(`New User ${++this.addCount}`);\n    this.$users.next(this.users);\n  }\n\n  editUser() {\n    this.users[0] = `Edit user ${++this.editCount}`;\n    this.$users.next(this.users);\n  }\n}\n\n\n// Внутри async piep\nif (oldValue !== newValue) {\n  this.cdr.detectChanges();\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}